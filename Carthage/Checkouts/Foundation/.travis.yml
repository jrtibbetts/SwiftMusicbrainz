matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      services: docker
      env: DOCKER_IMAGE=swift:3.1
    - os: osx
      language: objective-c
      osx_image: xcode8.3
      env: PLAT=macOS SWFT=3.1
    - os: osx
      language: objective-c
      osx_image: xcode8.3
      env: PLAT=iOS SWFT=3.1
    - os: osx
      language: objective-c
      osx_image: xcode8.3
      env: PLAT=tvOS SWFT=3.1
    - os: osx
      language: objective-c
      osx_image: xcode8.3
      env: PLAT=watchOS SWFT=3.1
    - os: osx
      language: objective-c
      osx_image: xcode9
      env: PLAT=macOS SWFT=3.2
    - os: osx
      language: objective-c
      osx_image: xcode9
      env: PLAT=iOS SWFT=3.2
    - os: osx
      language: objective-c
      osx_image: xcode9
      env: PLAT=tvOS SWFT=3.2
    - os: osx
      language: objective-c
      osx_image: xcode9
      env: PLAT=watchOS SWFT=3.2
    - os: osx
      language: objective-c
      osx_image: xcode9
      env: PLAT=macOS SWFT=4.0
    - os: osx
      language: objective-c
      osx_image: xcode9
      env: PLAT=iOS SWFT=4.0
    - os: osx
      language: objective-c
      osx_image: xcode9
      env: PLAT=tvOS SWFT=4.0
    - os: osx
      language: objective-c
      osx_image: xcode9
      env: PLAT=watchOS SWFT=4.0
before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker pull $DOCKER_IMAGE;
    fi;
    case $PLAT in
    iOS)
      NAME="iPhone SE";;
    tvOS)
      NAME="Apple TV 1080p";;
    watchOS)
      NAME="Apple Watch - 38mm";;
    esac;
    if [ -n "$NAME" ]; then
      export UUID=$(instruments -s | ruby -e "ARGF.each_line{ |ln| ln =~ /$NAME .* \[(.*)\]/; if \$1; puts(\$1); exit; end }");
    fi
install:
  - case $PLAT in
    macOS)
      carthage bootstrap --platform Mac;;
    tvOS|iOS|watchOS)
      carthage bootstrap --platform $PLAT;;
    esac;
script:
  - set -o pipefail;
    case $PLAT in
    macOS)
      xcodebuild -scheme PMKFoundation SWIFT_VERSION=$SWFT -quiet -enableCodeCoverage YES test | xcpretty;;
    iOS|tvOS)
      open -a "simulator" --args -CurrentDeviceUDID "$UUID";
      xcodebuild -scheme PMKFoundation SWIFT_VERSION=$SWFT -destination "id=$UUID" -quiet -enableCodeCoverage YES test | xcpretty;;
    watchOS)
      xcodebuild -scheme PMKFoundation SWIFT_VERSION=$SWFT -destination "id=$UUID" -quiet | xcpretty;;
    *)
      docker-compose run PMKFoundation;;
    esac
after_success:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      bash <(curl -s https://codecov.io/bash);
    fi
